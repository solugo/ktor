public final class io/ktor/server/plugins/ContentNegotiation {
	public static final field Plugin Lio/ktor/server/plugins/ContentNegotiation$Plugin;
}

public final class io/ktor/server/plugins/ContentNegotiation$Configuration : io/ktor/shared/serialization/Configuration {
	public fun <init> ()V
	public final fun accept (Lkotlin/jvm/functions/Function2;)V
	public final fun getCheckAcceptHeaderCompliance ()Z
	public fun register (Lio/ktor/http/ContentType;Lio/ktor/shared/serialization/ContentConverter;Lkotlin/jvm/functions/Function1;)V
	public final fun setCheckAcceptHeaderCompliance (Z)V
}

public final class io/ktor/server/plugins/ContentNegotiation$Plugin : io/ktor/server/application/ApplicationPlugin {
	public fun getKey ()Lio/ktor/util/AttributeKey;
	public fun install (Lio/ktor/server/application/ApplicationCallPipeline;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/plugins/ContentNegotiation;
	public synthetic fun install (Lio/ktor/util/pipeline/Pipeline;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class io/ktor/server/plugins/ContentNegotiationKt {
	public static final fun sortedByQuality (Ljava/util/List;)Ljava/util/List;
	public static final fun suitableCharset (Lio/ktor/server/application/ApplicationCall;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
	public static synthetic fun suitableCharset$default (Lio/ktor/server/application/ApplicationCall;Ljava/nio/charset/Charset;ILjava/lang/Object;)Ljava/nio/charset/Charset;
}

public final class io/ktor/server/plugins/ContentTypeWithQuality {
	public fun <init> (Lio/ktor/http/ContentType;D)V
	public synthetic fun <init> (Lio/ktor/http/ContentType;DILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lio/ktor/http/ContentType;
	public final fun component2 ()D
	public final fun copy (Lio/ktor/http/ContentType;D)Lio/ktor/server/plugins/ContentTypeWithQuality;
	public static synthetic fun copy$default (Lio/ktor/server/plugins/ContentTypeWithQuality;Lio/ktor/http/ContentType;DILjava/lang/Object;)Lio/ktor/server/plugins/ContentTypeWithQuality;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getContentType ()Lio/ktor/http/ContentType;
	public final fun getQuality ()D
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

